# -*- coding: utf-8 -*-
"""
  Script permettant la programmation d'une relance depuis la table de relance [STAT].[prod].[RelanceGestion]
"""

import os
import sys

from path import Path

src_path = os.path.dirname(Path(os.path.abspath(__file__)).parent)
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from load_json import load_json
from sql_connexion import get_sql_operations
from sql_schema import get_schema_from_json
from variable_environnement import load_variable_environnement
from variable_environnement import get_variable_environnement


if __name__ == '__main__':
    variable_environnement = load_variable_environnement()

    path = os.path.join(get_variable_environnement(variable_environnement, 'pilotage'), 'gestion_production',
                        'tables_relance.json')
    tables_relance = load_json(path)

    path_schema = get_variable_environnement(variable_environnement, 'schema')

    schema = get_schema_from_json(path_schema, 'relance_gestion')

    table = tables_relance['relance_gestion']

    sql_operations = get_sql_operations()

    data = {"IdRelance": "42",
            "ModeRelance": 'correction',
            "ClePanier": "26",
            "Periodicite": 'hebdo',
            "DebutPeriode": "202104",
            "FinPeriode": "202104",
            "RootMoteur": "ventes",
            "ExcluMoteur": "rfsotc"}

    sql_operations.delete_rows(table, ['IdRelance = {0}'.format(data['IdRelance'])])
    sql_operations.insert_values(data, table, schema)
