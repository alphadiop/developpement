# -*- coding: utf-8 -*-
"""
  Script d'eefectuer les contrôles sur les données moteur STAT
"""

import os
import sys

from path import Path

src_path = os.path.dirname(Path(os.path.abspath(__file__)).parent)
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from controle_table_production import controle_table_production
from time_periodes import get_semaines, get_mois
from sql_connexion import get_sql_operations
from variable_environnement import load_variable_environnement
from variable_environnement import get_variable_environnement
from pilotage import load_moteur_stat
from get_logger import get_logger
from pilotage import load_controles

if __name__ == '__main__':
    periodicite = 'mensuel'
    moteur = 'soc'
    table = 'soc'
    periode_debut, periode_fin = '201608', '202107'
    is_production = False

    variable_environnement = load_variable_environnement()

    path_log = os.path.join(get_variable_environnement(variable_environnement, 'log'), 'controle', table, periodicite)
    logger = get_logger({'Moteur': moteur, 'Periodicite': periodicite}, path_log)

    moteurs_stat = load_moteur_stat(variable_environnement, periodicite, logger=logger)

    sql_operations = get_sql_operations(connect_args={'autocommit': True}, logger=logger)

    operations_controle = load_controles(variable_environnement, 'operations_controle', logger=logger)
    tables_controle = load_controles(variable_environnement, 'tables_controle', logger=logger)

    path_data = get_variable_environnement(variable_environnement, 'data', logger=logger)
    path_schema = get_variable_environnement(variable_environnement, 'schema', logger=logger)

    periodes = (get_semaines(sql_operations, periode_debut, periode_fin, logger=logger) if periodicite == 'hebdo'
                else get_mois(sql_operations, periode_debut, periode_fin, logger=logger))

    print('')
    print('Moteur     : ' + moteur)
    print('Table      : ' + table)
    print('Periodicite: ' + periodicite)
    print('Periodes   : ' + ", ".join(periodes))
    print('')
    for periode in periodes:
        print('    Periode: {0}'.format(periode), end=',')
        controle_table_production(sql_operations, moteurs_stat, operations_controle, tables_controle, path_data,
                                  path_schema, moteur, table, periodicite, periode, is_production=is_production, logger=logger)