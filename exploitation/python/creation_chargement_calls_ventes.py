# -*- coding: utf-8 -*-
"""
  Cr√©ation de la table Calls.
"""

import os
import sys

from path import Path

src_path = os.path.dirname(Path(os.path.abspath(__file__)).parent)
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from sql_connexion import get_sql_operations
from sql_schema import get_schema_from_json
from variable_environnement import load_variable_environnement
from variable_environnement import get_variable_environnement
from partition import get_attribut_partition
from sql_schema import get_columns_from_schema
from make_dirs import make_dirs
from copy_file import copy_file


if __name__ == '__main__':
    variable_environnements = load_variable_environnement()
    table_name = '[STAT].[dbo].[CallsVentes]'
    table = 'calls_ventes'

    sql_operations = get_sql_operations()

    path_schema = get_variable_environnement(variable_environnements, 'schema')
    schema = get_schema_from_json(path_schema, 'calls_ventes', logger=None)
    columns = get_columns_from_schema(schema)

    sql_operations.create_table(table_name, schema)

    _, _, _, name_index = get_attribut_partition(table_name)
    sql_operations.create_clustered_columnstore_index(table_name, name_index)

    path_dw = os.path.join(get_variable_environnement(variable_environnements, 'path_dw'), table)
    make_dirs(path_dw, exist_ok=True)
    path_src = os.path.join(get_variable_environnement(variable_environnements, 'data'), table, table + '.csv')
    path_dst = os.path.join(path_dw, table + '.csv')
    copy_file(path_src, path_dst)

    sql_operations.delete_rows(table_name, where=['1 = 1'])

    sql_operations.insert_values_bulks(table_name, [path_dst], additional_options=["CODEPAGE = 65001"])

    sql_operations.close()
