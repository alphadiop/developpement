# -*- coding: utf-8 -*-
"""
  Cr√©ation des tables de suivi de relance
"""

import os
import sys

from path import Path

src_path = os.path.dirname(Path(os.path.abspath(__file__)).parent)
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from load_json import load_json
from logger import LOGGER
from sql_connexion import get_sql_operations
from sql_schema import build_schema
from variable_environnement import get_variable_environnement
from variable_environnement import load_variable_environnement

if __name__ == '__main__':
    table_name = 'relance_gestion'

    variable_environnement = load_variable_environnement()

    path_log = os.path.join(get_variable_environnement(variable_environnement, 'log', logger=None), '', '',
                            'table_production', '', '')

    parameters = dict(Moteur='table_relance', Periodicite='', Periode='')

    logger = LOGGER(parameters, path_log, type_logger="stream_file")
    path_schema = os.path.join(get_variable_environnement(variable_environnement, 'schema', logger=logger), 'relance')

    path_relance = os.path.join(get_variable_environnement(variable_environnement, 'pilotage', logger=logger),
                                'gestion_production')
    table_names = load_json(os.path.join(path_relance, 'tables_relance.json'), logger=logger)

    sql_operations = get_sql_operations(logger=logger)

    json_schema = load_json(os.path.join(path_schema, f'{table_name}.json'), logger=logger)
    schema = build_schema(json_schema, logger=logger)
    sql_operations.create_table(table_names[table_name], schema)

    sql_operations.connexion.close()
