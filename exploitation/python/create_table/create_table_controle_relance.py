# -*- coding: utf-8 -*-
"""
  Création des tables de contrôle sur les résultats des tables de relance
"""

import os
import sys

from path import Path

src_path = os.path.join(os.path.dirname(Path(os.path.abspath(__file__)).parent.parent.parent), 'script')
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from load_json import load_json
from logger import LOGGER
from sql_connexion import get_sql_operations
from sql_schema import get_controle_schema_from_json
from variable_environnement import get_variable_environnement
from variable_environnement import load_variable_environnement

if __name__ == '__main__':
    # tablee controle à créer
    table = 'travelling_etablissement_uga'

    variable_environnement = load_variable_environnement()

    path_log = get_variable_environnement(variable_environnement, 'log')
    path_log = os.path.join(path_log, '', '', 'table_production', '', '')

    etude_parameters = dict(Moteur='table_production', Periodicite='', Periode='')
    logger = LOGGER(etude_parameters, path_log, type_logger='stream_file')

    sql_operations = get_sql_operations()

    path_schema = get_variable_environnement(variable_environnement, 'schema', logger=logger)

    path_pilotage = get_variable_environnement(variable_environnement, 'pilotage', logger=logger)
    path_schema_controle = os.path.join(path_pilotage, 'controle', 'tables_controle.json')

    tables_controle = load_json(path_schema_controle, logger=logger)
    table_controle = tables_controle[table]['table']['relance']

    schema = get_controle_schema_from_json(path_schema, tables_controle[table]['schema'], logger=logger)

    schema = [('IdRelance', 'INT', 'NOT NULL')] + schema + [('Data', 'TINYINT', 'NOT NULL')]

    sql_operations.create_table(table_controle, schema)

    sql_operations.connexion.close()
