
# -*- coding: utf-8 -*-
"""
  Cr√©ation des synonymes
"""
import ast
import os
import sys

from path import Path

src_path = os.path.dirname(Path(os.path.abspath(__file__)).parent)
for rep in os.listdir(src_path):
    sys.path.append(os.path.join(src_path, rep))

from logger import LOGGER
from sql_connexion import get_sql_operations
from variable_environnement.get_variable_environnement import get_variable_environnement
from variable_environnement.load_variable_environnement import load_variable_environnement
from read import read_csv

if __name__ == '__main__':
    variable_environnement = load_variable_environnement()

    path_file = Path(os.path.dirname(__file__)).parent

    parameters = dict(Moteur='create_synonyms', Periodicite='', Periode='')

    path_log = os.path.join(get_variable_environnement(variable_environnement, 'log', logger=None),
                            'create_synonyms', '', '', '')

    logger = LOGGER(parameters, path_log, type_logger="stream_file")

    sql_operations = get_sql_operations(logger=logger)

    serveur_cible = get_variable_environnement(variable_environnement, 'dw_gersit', logger=logger)
    serveur_cible = ast.literal_eval(serveur_cible)['server'].lower()

    path_requirements = os.path.join(get_variable_environnement(variable_environnement, 'pilotage', logger=logger),
                                     'requirements', 'synonyms.csv')

    serveur_source = get_variable_environnement(variable_environnement, 'server_source', logger=logger)

    df_synonyms = read_csv(path_requirements, logger=logger)
    for row in df_synonyms.iterrows():
        synonym_name = row[1].get('Schema') + '.' + row[1].get('Name')
        base_object_name = '.'.join([serveur_source, row[1].get('base_object_name')])
        sql_operations.create_synonym(synonym_name=synonym_name, base_object_name=base_object_name)

    sql_operations.connexion.close()
